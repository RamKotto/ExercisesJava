package HerbertShildt.Multithreading.RunnableOne;

public class UseThreads {
    public static void main(String[] args) {
        System.out.println("Запуск основного потока");

        // Сначала создадим объект типа MyThread
        MyThread mt = new MyThread("Порожденный поток №1");  // Создание выполняемого объекта

        // Затем формируем поток на основе этого объекта
        Thread newThrd = new Thread(mt);

        // Наконец, начинаем выполнение потока
        newThrd.start();

        for (int i = 0; i < 50; i++) {
            System.out.print(".");
            try {
                Thread.sleep(100);
            } catch (InterruptedException exc) {
                System.out.println("Прерываение основного потока");
            }
        }
        System.out.println("Завершение основного потока");
    }
}

/*
Вывод:
Запуск основного потока
.Порожденный поток №1запуск
...B Порожденный поток №1, счетчик: 0
....B Порожденный поток №1, счетчик: 1
....B Порожденный поток №1, счетчик: 2
....B Порожденный поток №1, счетчик: 3
....B Порожденный поток №1, счетчик: 4
....B Порожденный поток №1, счетчик: 5
....B Порожденный поток №1, счетчик: 6
....B Порожденный поток №1, счетчик: 7
....B Порожденный поток №1, счетчик: 8
....B Порожденный поток №1, счетчик: 9
Порожденный поток №1 -  завершение
..........Завершение основного потока

Process finished with exit code 0

 */
